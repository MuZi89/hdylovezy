<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.1.xsd">
	
	<!-- 放开对login.jsp的验证 -->
<!-- 	<http pattern="/login.jsp" security="none"/>
	<http pattern="/error.jsp" security="none"/> -->
	
	<!-- spring security自定义表单认证
	
	  <form-login>
	  login-page: 登录页面的URL。

      username-parameter：登录表单中用户名的字段名称。

      password-parameter：登录表单中密码的字段名称。

      login-processing-url：登录表单提交地址。

      authentication-success-forward-url：登录成功跳转地址。

      authentication-failure-url：登录失败跳转地址。
      
      <logout>
      invalidate-session：是否清空session。

      logout-url="/login/logout.action"：退出表单的提交地址。

      logout-success-url：退出成功后的跳转地址。
	
	-->
	<http auto-config="true" use-expressions="true">
	    <!-- 表示拦截任意路径 ,使用ant风格进行通配-->
	    <intercept-url pattern="/admin**" access="hasRole('USER')"/>
	    <!-- 用于显示自定义登录的页面 -->
	    <form-login login-page="/form.do" authentication-failure-url="/error.jsp"
	    login-processing-url="/login.do" authentication-success-forward-url="/login.do"
	    username-parameter="username" password-parameter="password"/>
	    <!-- 成功后转向的url -->
	   <logout invalidate-session="true" logout-success-url="/logout.do"/>
	    <!-- 启用跨站请求伪造(CSRF)保护 -->
	   <csrf disabled="true"/>
	    
	    <!-- 自定义拒绝访问的页面 -->
	    <access-denied-handler error-page="/index.jsp"/>
	</http>
	
	<!-- 进行用户登录管理 -->
	<authentication-manager>
	    <authentication-provider>
	           <user-service>
	                 <user name="leonhardt" password="123" authorities="ROLE_USER,ROLE_ADMIN"/>
	                 <user name="korin" password="123" authorities="ROLE_USER"/>
	           </user-service>
	    </authentication-provider>
	</authentication-manager>
	
	
</beans:beans>